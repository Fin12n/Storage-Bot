// src/commands/removeuser.js
const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const PermissionManager = require('../utils/permissions');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('removeuser')
        .setDescription('X√≥a ng∆∞·ªùi d√πng kh·ªèi danh s√°ch ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng kho plugins')
        .addUserOption(option =>
            option.setName('user')
                .setDescription('Ng∆∞·ªùi d√πng c·∫ßn x√≥a quy·ªÅn')
                .setRequired(true)
        ),

    async execute(interaction) {
        const isAuthorized = await PermissionManager.isAuthorized(interaction.user.id);
        
        if (!isAuthorized) {
            const embed = new EmbedBuilder()
                .setColor('#ff0000')
                .setTitle('‚ùå Kh√¥ng c√≥ quy·ªÅn')
                .setDescription('B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!')
                .setTimestamp();
            
            return interaction.reply({ embeds: [embed], ephemeral: true });
        }

        const targetUser = interaction.options.getUser('user');
        
        // Prevent self-removal (optional)
        if (targetUser.id === interaction.user.id) {
            const embed = new EmbedBuilder()
                .setColor('#ffaa00')
                .setTitle('‚ö†Ô∏è C·∫£nh b√°o')
                .setDescription('B·∫°n kh√¥ng th·ªÉ x√≥a quy·ªÅn c·ªßa ch√≠nh m√¨nh!')
                .setTimestamp();
            
            return interaction.reply({ embeds: [embed], ephemeral: true });
        }

        try {
            const success = await PermissionManager.removeUser(targetUser.id);

            const embed = new EmbedBuilder()
                .setColor(success ? '#00ff00' : '#ffaa00')
                .setTitle(success ? '‚úÖ Th√†nh c√¥ng' : '‚ö†Ô∏è Th√¥ng b√°o')
                .setDescription(success ? 
                    `ƒê√£ x√≥a ${targetUser.username} kh·ªèi danh s√°ch ƒë∆∞·ª£c ph√©p s·ª≠ d·ª•ng kho plugins!` :
                    `${targetUser.username} kh√¥ng c√≥ trong danh s√°ch quy·ªÅn!`
                )
                .addFields(
                    { name: 'üë§ Ng∆∞·ªùi b·ªã x√≥a', value: `<@${targetUser.id}>`, inline: true },
                    { name: 'üîß X√≥a b·ªüi', value: `<@${interaction.user.id}>`, inline: true }
                )
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('L·ªói khi x√≥a user:', error);
            
            const embed = new EmbedBuilder()
                .setColor('#ff0000')
                .setTitle('‚ùå L·ªói')
                .setDescription('C√≥ l·ªói x·∫£y ra khi x√≥a ng∆∞·ªùi d√πng!')
                .setTimestamp();
            
            await interaction.reply({ embeds: [embed], ephemeral: true });
        }
    },
};