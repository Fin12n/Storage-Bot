// src/commands/reload-plugins.js
const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const PluginManager = require('../utils/plugins');
const PermissionManager = require('../utils/permissions');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('reload-plugins')
        .setDescription('Reload danh s√°ch plugins t·ª´ th∆∞ m·ª•c'),

    async execute(interaction) {
        const isAuthorized = await PermissionManager.isAuthorized(interaction.user.id);
        
        if (!isAuthorized) {
            const embed = new EmbedBuilder()
                .setColor('#ff0000')
                .setTitle('‚ùå Kh√¥ng c√≥ quy·ªÅn')
                .setDescription('B·∫°n kh√¥ng c√≥ quy·ªÅn reload plugins!')
                .setTimestamp();
            
            return interaction.reply({ embeds: [embed], ephemeral: true });
        }

        await interaction.deferReply();

        try {
            const result = await PluginManager.scanAndSyncPlugins();
            
            const embed = new EmbedBuilder()
                .setColor('#00ff00')
                .setTitle('üîÑ Reload ho√†n t·∫•t!')
                .setDescription('ƒê√£ qu√©t v√† ƒë·ªìng b·ªô plugins t·ª´ th∆∞ m·ª•c!')
                .addFields(
                    { name: 'üìÅ Th∆∞ m·ª•c ƒë√£ qu√©t', value: result.scannedFolders.toString(), inline: true },
                    { name: 'üì¶ Plugins t√¨m th·∫•y', value: result.foundPlugins.toString(), inline: true },
                    { name: '‚ûï Plugins m·ªõi', value: result.newPlugins.toString(), inline: true },
                    { name: 'üóÇÔ∏è T·ªïng plugins', value: result.totalPlugins.toString(), inline: true }
                )
                .setTimestamp();

            if (result.errors.length > 0) {
                embed.addFields({
                    name: '‚ö†Ô∏è L·ªói',
                    value: result.errors.slice(0, 3).join('\n'),
                    inline: false
                });
            }

            await interaction.editReply({ embeds: [embed] });
        } catch (error) {
            console.error('L·ªói khi reload:', error);
            
            const embed = new EmbedBuilder()
                .setColor('#ff0000')
                .setTitle('‚ùå L·ªói')
                .setDescription('C√≥ l·ªói x·∫£y ra khi reload plugins!')
                .setTimestamp();
            
            await interaction.editReply({ embeds: [embed] });
        }
    },
};